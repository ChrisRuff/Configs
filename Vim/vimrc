" All system-wide defaults are set in $VIMRUNTIME/archlinux.vim (usually just
" /usr/share/vim/vimfiles/archlinux.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vimrc), since archlinux.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing archlinux.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages.
runtime! archlinux.vim

set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'tpope/vim-fugitive'
Plugin 'VundleVim/Vundle.vim'

"OCTAVE"
Plugin 'jvirtanen/vim-octave'

Plugin 'xavierd/clang_complete'
let g:clang_library_path='/usr/lib64/libclang.so.9'
Plugin 'dense-analysis/ale'
let g:ale_completion_enabled = 1
let g:ale_sign_error = '>>'
let g:ale_sign_warning = '#>'
nmap <silent> [c <Plug>(ale_previous_wrap)
nmap <silent> ]c <Plug>(ale_next_wrap)
let b:ale_linters = ['flake8', 'pylint', 'gcc', 'clang']

" Fix files automatically on save
let g:ale_fix_on_save = 1


Plugin 'vim-scripts/taglist.vim'
Plugin 'rking/ag.vim'

" CtrlP settings
Plugin 'kien/ctrlp.vim'
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
let g:ctrlp_prompt_mappings = {
  \ 'PrtSelectMove("k")':   ['<c-l>', '<up>'],
	\ 'PrtCurRight()' : ['<c-;>', '<right>'],
	\ 'PrtCurLeft()' : ['<c-j>', '<left>'],
	\ 'PrtSelectMove("j")': ['<c-k>', '<down>'],
	\ }

Plugin 'simeji/winresizer'
let g:winresizer_keycode_left = 106
let g:winresizer_keycode_right = 59
let g:winresizer_keycode_down = 107
let g:winresizer_keycode_up = 108

Plugin 'LaTeX-Suite-aka-Vim-LaTeX'

Plugin 'sjl/gundo.vim'


let g:Tlist_WinWidth=60
call vundle#end()
filetype plugin indent on

set clipboard=unnamedplus

set softtabstop=2
set tabstop=2
set shiftwidth=2
set noexpandtab
set conceallevel=1
set listchars=tab:\|\ 
set list

set incsearch
set hlsearch

set foldenable
set foldlevelstart=10
set foldnestmax=10
set foldmethod=indent

set cursorline
set lazyredraw
set wildmenu
set showmatch
set matchpairs+=<:>
set number
set exrc 
set secure
set scrolloff=15
set colorcolumn=200
set syntax
syntax enable
" move the navigation keys one to the right to line up with traditional touch
" typing
"MOVEMENT START"
nnoremap j h
nnoremap k j
nnoremap l k
nnoremap ; l

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" $/^ doesn't do anything
nnoremap $ <nop>
nnoremap ^ <nop>
"shifting move keys over one"
map h <nop>
vnoremap j h
vnoremap k j
vnoremap l k
vnoremap ; l
nnoremap <C-k> jzz
nnoremap <C-l> kzz
noremap <C-w>j <C-w>h
noremap <C-w>k <C-w>j
noremap <C-w>l <C-w>k
noremap <C-w>; <C-w>l

nnoremap <S-k> 3j
nnoremap <S-l> 3k
"MOVEMENT END"

" Auto complete braces
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap <expr> ) strpart(getline('.'), col('.')-1, 1) == ")" ? "\<Right>" : ")"
inoremap <expr> " strpart(getline('.'), col('.')-1, 1) == "\"" ? "\<Right>" : "\"\"<Left>"
inoremap <expr> ' strpart(getline('.'), col('.')-1, 1) == "\'" ? "\<Right>" : "\'\'<Left>"
inoremap <expr> } strpart(getline('.'), col('.')-1, 1) == "}" ? "\<Right>" : "}"
inoremap <expr> ] strpart(getline('.'), col('.')-1, 1) == "]" ? "\<Right>" : "]"

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>
nnoremap <space> za

" highlight last inserted text
nnoremap gV `[v`]

"Leader is comma"'
let mapleader=","   

"PLUGINS"
""nnoremap <leader><Tab> :IndentLinesToggle<CR>

nnoremap <leader>u :GundoToggle<CR>
nnoremap <leader>a :Ag

"GIT"
nnoremap <leader>g :G<CR>
nnoremap <leader>c :Gcommit<CR>
nnoremap <leader><C-p> :Gpush<CR>
nnoremap <leader>A :Gwrite<CR>



" do not load defaults if ~/.vimrc is missing
"let skip_defaults_vim=1
